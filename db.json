{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.npmignore","hash":"ea2b285a29690f1eabbad0f3a158e34e9ccd1d86","modified":1548601127240},{"_id":"themes/landscape/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1548601127242},{"_id":"themes/landscape/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1548601127244},{"_id":"themes/landscape/README.md","hash":"e7cc82dc79596f36ba05a8139e7d6b2dfc4ae5f9","modified":1548601127246},{"_id":"themes/landscape/_config.yml","hash":"218c5fb76666696c42dc86e2de4711e6b80befbf","modified":1548601127247},{"_id":"themes/landscape/package.json","hash":"d07f326588fef82f1d23ae3101c9ddfff34c132f","modified":1548601127317},{"_id":"source/_posts/hello-world.md","hash":"029f91fccbe8f87c0f3ea10c4042300d2fa7edc0","modified":1548601127233},{"_id":"source/_posts/my-new-Post.md","hash":"70df2bd55165955c4144b38141595c054890833c","modified":1548601127235},{"_id":"source/_posts/简易postGIS-01.md","hash":"88bae324170c56ca8e0967aa930a2d1e40032c7e","modified":1548601694937},{"_id":"source/_posts/简易postGIS-01.md.bak","hash":"6f58b27752ab01c27a5cb55488bad57081648f51","modified":1548601127237},{"_id":"themes/landscape/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1548601127250},{"_id":"themes/landscape/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1548601127252},{"_id":"themes/landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1548601127254},{"_id":"themes/landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1548601127256},{"_id":"themes/landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1548601127257},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1548601127259},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1548601127261},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1548601127304},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1548601127306},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1548601127307},{"_id":"themes/landscape/layout/layout.ejs","hash":"5d86bc48b0f1bdce9a2bb548c2f8e7a4f50d499a","modified":1548601127309},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1548601127311},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1548601127313},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1548601127315},{"_id":"themes/landscape/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1548601127320},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"a7faab4f3601b28107af5b1095b3966c2f88fec8","modified":1548601127264},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1548601127266},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"5cf2b8a1148e6f8c4bd9ca9e3b84c7e5a59d56bc","modified":1548601127269},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"3beb0d164acacb6f21e1ca2038158a74ab4a73e4","modified":1548601127268},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"6faefe07f3d64e21c7743276e0f55ee1544f9d86","modified":1548601127271},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1548601127273},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"89998e6b2929c4ff5093bbf6b86d611d7420be52","modified":1548601127275},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1548601127279},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1548601127292},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1548601127295},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1548601127296},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"16800f85ffb036d2644a26e02facd61acb3706e9","modified":1548601127298},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"148bdf714dd1a7bf55e571f13808ceae079200cc","modified":1548601127277},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1548601127300},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1548601127302},{"_id":"themes/landscape/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1548601127323},{"_id":"themes/landscape/source/css/_variables.styl","hash":"8b63ea3c7199524b9a1541075c6f8fb2c0d0ea3d","modified":1548601127348},{"_id":"themes/landscape/source/css/style.styl","hash":"4a3e64ee8dad5834860c30b4176882eff628ca6b","modified":1548601127371},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1548601127373},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1548601127375},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1548601127377},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1548601127379},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1548601127381},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1548601127384},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1548601127398},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1548601127401},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1548601127403},{"_id":"themes/landscape/source/js/script.js","hash":"c0d368681c687258b628bacc84cc30d353de6d47","modified":1548601127405},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1548601127281},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1548601127283},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1548601127285},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1548601127287},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1548601127289},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1548601127290},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"e291bc8c5f0c21080baa549d5d9ef2f39a871ea7","modified":1548601127327},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"6f7aa810f296d6a1a4486637b5a853d35a198938","modified":1548601127331},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1548601127333},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"9e574d8eb1a5285ec3b4346607414770d2f7e0ff","modified":1548601127325},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"ac19f1621305ca9f6a7b74acd211a4c0d88690bd","modified":1548601127335},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1548601127336},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1548601127338},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1548601127340},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1548601127341},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1548601127329},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1548601127344},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1548601127346},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1548601127351},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1548601127353},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1548601127364},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1548601127386},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1548601127388},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1548601127390},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1548601127392},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1548601127394},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1548601127396},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1548601127361},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1548601127357},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1548601127369},{"_id":"public/2019/01/25/简易postGIS-01/index.html","hash":"d9716b035f7f46f017c790a1f1d24165bb7289c6","modified":1548601811882},{"_id":"public/2018/12/03/my-new-Post/index.html","hash":"deaa2f8c3aece398cddf73172f4547df6679fc10","modified":1548601811882},{"_id":"public/archives/index.html","hash":"a05ee1d127a7efb3168129a9e37429c759ae8c7b","modified":1548601811893},{"_id":"public/archives/2018/index.html","hash":"a2aad4b3f827d7c66764fcf386027f8db8533a35","modified":1548601811893},{"_id":"public/archives/2018/12/index.html","hash":"aa5b521d0eb54c33faf02fdf2c62384a7ea30c93","modified":1548601811894},{"_id":"public/archives/2019/index.html","hash":"94beb7294df9144474b94efaa8348c219822a1a9","modified":1548601811894},{"_id":"public/archives/2019/01/index.html","hash":"2cc59f62b4db11ef8278ba25f46143a0991c9393","modified":1548601811894},{"_id":"public/index.html","hash":"1827b4876fd708ecc1c7fade02aa14aed7c82e41","modified":1548601811894},{"_id":"public/2019/01/27/hello-world/index.html","hash":"168165f5695020110276d0d5d5ac98dbb70f8ef3","modified":1548601811895}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2019-01-27T14:58:47.232Z","updated":"2019-01-27T14:58:47.233Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrf1hhja0000i4kkj05hbf29","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"my new Post","date":"2018-12-03T09:39:31.000Z","_content":"","source":"_posts/my-new-Post.md","raw":"---\ntitle: my new Post\ndate: 2018-12-03 17:39:31\ntags:\n---\n","slug":"my-new-Post","published":1,"updated":"2019-01-27T14:58:47.235Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrf1hhjk0001i4kkqyfycckq","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"简易GIS（1）","date":"2019-01-25T10:16:24.000Z","_content":"\n# 如何用sql实现地理坐标之间的距离查询、周边查询及范围查询？\n\n\n## 进行空间查询的场景\n在app上或数据分析时，有时会用到与经纬度等坐标位置相关的周边查询，常见的需求主要涉及三种空间查询：\n- 计算点之间的距离\n- 计算点与线之间的距离\n- 计算点与面之间的包含关系\n\n有很多种方式可以实现这些需求，从便捷性、可靠性、高效率的角度，可以考虑sql方式。\n\n## 基于postgresql的几何空间计算\npostgresql提供了便捷的空间关系语法，常用的包括：\nA与B的距离用“A <-> B”，\n判断A在B之内用“A <@ B”\n其他包括平移、缩放、相接、上下、左右、平行、中心点、最近点等各种你能想到的空间关系，感觉非常适合用来支撑图形计算。具体参见：https://www.postgresql.org/docs/9.6/functions-geometry.html\n\n（1）计算两个点之间的距离：\n点A：point(4, 3)\n点B：point(10, 32)\nsql如下：\nselect point(4, 3) <-> point(10, 32);\n\n（2）判断点A是否在面B之内：\n点A：point '(1,1)'\n面B：circle '((0,0),2)'\nselect point '(1,1)' <@ circle '((0,0),2)' \n\n（3）查找距离线路3之内的所有点\n\nCREATE TABLE \"test\".\"bus_stop\" (\n  \"id\" int4 NOT NULL,\n  \"bus_stop\" point,\n  \"stop_name\" varchar(255) COLLATE \"pg_catalog\".\"default\"\n)\n;\n\nCREATE TABLE \"test\".\"walk_line\" (\n  \"id\" int4 NOT NULL,\n  \"walk_line\" path,\n  \"line_name\" varchar(255) COLLATE \"pg_catalog\".\"default\"\n)\n;\n\nSELECT \na.stop_name,\nb.line_name,\na.bus_stop <-> b.walk_line as dist\nfrom bus_stop as a,walk_line as b\nwhere a.bus_stop <-> b.walk_line < 3\n\n美中不足的是，postgresql只支持几何类型，不支持地理类型，也就是不支持经纬度。要支持经纬度，需要postgis插件的支持。\n\n## 基于postgis的地理空间计算\n\n在postgis中有两种主要的数据类型，geometry和geography，常规功能优先使用geography类型。geometry是经典数据类型，功能非常强大，geography是postgis后来推出的数据类型，使用方便。两者之间的具体区别可见功能矩阵文档。\n\n建表：\nCREATE TABLE ptgeogwgs(gid serial PRIMARY KEY, geog geography(POINT) );\nINSERT INTO ptgeogwgs (gid, geog) VALUES (1,ST_GeogFromText('POINT(120.787 30.122)'));\nINSERT INTO ptgeogwgs (gid, geog) VALUES (2,ST_GeogFromText('POINT(121.101 31.508)'));\nSELECT gid,geog,st_astext(geog) from ptgeogwgs;\n\n点之间距离查询：\nSELECT st_distance(p1.geog, p2.geog) from ptgeogwgs as p1,ptgeogwgs as p2 where p1.gid>p2.gid ;\n\n周边查询：\nSELECT p1.gid,p2.gid from ptgeogwgs as p1,ptgeogwgs as p2 where p1.gid>p2.gid\nand st_dwithin(p1.geog, p2.geog, 1000000)；\n\n点与线之间距离及周边查询：\ncreate table linegeowgs (gid serial PRIMARY KEY, geog geography(LINESTRING));\nINSERT INTO linegeowgs (gid, geog) VALUES (1,ST_GeogFromText('LINESTRING(121.11 31.22,121.22 31.13,121.33 31.433)'));\nSELECT st_distance(p1.geog, p2.geog) from ptgeogwgs as p1,linegeowgs as p2\nwhere st_dwithin(p1.geog,p2.geog,24000)\n\n相关概念的介绍：\n点、线、面一般利用ST_GeogFromText从WKT(well known text)创建，常见的WKT有：\n- POINT(0 0) ——点\n- LINESTRING(0 0,1 1,1 2) ——线\n- POLYGON((0 0,4 0,4 4,0 4,0 0),(1 1, 2 1, 2 2, 1 2,1 1)) ——面\n\n距离计算有多种方式，对geography来说直接使用st_distance可以满足需求，细节区别参见官方文档\n\n详细文档参见：https://postgis.net/docs/reference.html\n\n## postgis的安装\n最便捷的安装方法莫过于docker：\ndocker pull mdillon/postgis:9.6\ndocker run --name postgis -p 5432:5432 -e POSTGRES_PASSWORD=12345 -d mdillon/postgis:9.6\n\n安装好直接可用，不需要再create extension postgis\n\n\n\n\n","source":"_posts/简易postGIS-01.md","raw":"---\ntitle: 简易GIS（1）\ndate: 2019-01-25 18:16:24\ntags:\n---\n\n# 如何用sql实现地理坐标之间的距离查询、周边查询及范围查询？\n\n\n## 进行空间查询的场景\n在app上或数据分析时，有时会用到与经纬度等坐标位置相关的周边查询，常见的需求主要涉及三种空间查询：\n- 计算点之间的距离\n- 计算点与线之间的距离\n- 计算点与面之间的包含关系\n\n有很多种方式可以实现这些需求，从便捷性、可靠性、高效率的角度，可以考虑sql方式。\n\n## 基于postgresql的几何空间计算\npostgresql提供了便捷的空间关系语法，常用的包括：\nA与B的距离用“A <-> B”，\n判断A在B之内用“A <@ B”\n其他包括平移、缩放、相接、上下、左右、平行、中心点、最近点等各种你能想到的空间关系，感觉非常适合用来支撑图形计算。具体参见：https://www.postgresql.org/docs/9.6/functions-geometry.html\n\n（1）计算两个点之间的距离：\n点A：point(4, 3)\n点B：point(10, 32)\nsql如下：\nselect point(4, 3) <-> point(10, 32);\n\n（2）判断点A是否在面B之内：\n点A：point '(1,1)'\n面B：circle '((0,0),2)'\nselect point '(1,1)' <@ circle '((0,0),2)' \n\n（3）查找距离线路3之内的所有点\n\nCREATE TABLE \"test\".\"bus_stop\" (\n  \"id\" int4 NOT NULL,\n  \"bus_stop\" point,\n  \"stop_name\" varchar(255) COLLATE \"pg_catalog\".\"default\"\n)\n;\n\nCREATE TABLE \"test\".\"walk_line\" (\n  \"id\" int4 NOT NULL,\n  \"walk_line\" path,\n  \"line_name\" varchar(255) COLLATE \"pg_catalog\".\"default\"\n)\n;\n\nSELECT \na.stop_name,\nb.line_name,\na.bus_stop <-> b.walk_line as dist\nfrom bus_stop as a,walk_line as b\nwhere a.bus_stop <-> b.walk_line < 3\n\n美中不足的是，postgresql只支持几何类型，不支持地理类型，也就是不支持经纬度。要支持经纬度，需要postgis插件的支持。\n\n## 基于postgis的地理空间计算\n\n在postgis中有两种主要的数据类型，geometry和geography，常规功能优先使用geography类型。geometry是经典数据类型，功能非常强大，geography是postgis后来推出的数据类型，使用方便。两者之间的具体区别可见功能矩阵文档。\n\n建表：\nCREATE TABLE ptgeogwgs(gid serial PRIMARY KEY, geog geography(POINT) );\nINSERT INTO ptgeogwgs (gid, geog) VALUES (1,ST_GeogFromText('POINT(120.787 30.122)'));\nINSERT INTO ptgeogwgs (gid, geog) VALUES (2,ST_GeogFromText('POINT(121.101 31.508)'));\nSELECT gid,geog,st_astext(geog) from ptgeogwgs;\n\n点之间距离查询：\nSELECT st_distance(p1.geog, p2.geog) from ptgeogwgs as p1,ptgeogwgs as p2 where p1.gid>p2.gid ;\n\n周边查询：\nSELECT p1.gid,p2.gid from ptgeogwgs as p1,ptgeogwgs as p2 where p1.gid>p2.gid\nand st_dwithin(p1.geog, p2.geog, 1000000)；\n\n点与线之间距离及周边查询：\ncreate table linegeowgs (gid serial PRIMARY KEY, geog geography(LINESTRING));\nINSERT INTO linegeowgs (gid, geog) VALUES (1,ST_GeogFromText('LINESTRING(121.11 31.22,121.22 31.13,121.33 31.433)'));\nSELECT st_distance(p1.geog, p2.geog) from ptgeogwgs as p1,linegeowgs as p2\nwhere st_dwithin(p1.geog,p2.geog,24000)\n\n相关概念的介绍：\n点、线、面一般利用ST_GeogFromText从WKT(well known text)创建，常见的WKT有：\n- POINT(0 0) ——点\n- LINESTRING(0 0,1 1,1 2) ——线\n- POLYGON((0 0,4 0,4 4,0 4,0 0),(1 1, 2 1, 2 2, 1 2,1 1)) ——面\n\n距离计算有多种方式，对geography来说直接使用st_distance可以满足需求，细节区别参见官方文档\n\n详细文档参见：https://postgis.net/docs/reference.html\n\n## postgis的安装\n最便捷的安装方法莫过于docker：\ndocker pull mdillon/postgis:9.6\ndocker run --name postgis -p 5432:5432 -e POSTGRES_PASSWORD=12345 -d mdillon/postgis:9.6\n\n安装好直接可用，不需要再create extension postgis\n\n\n\n\n","slug":"简易postGIS-01","published":1,"updated":"2019-01-27T15:08:14.937Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrf1hhjq0002i4kko926e7x8","content":"<h1 id=\"如何用sql实现地理坐标之间的距离查询、周边查询及范围查询？\"><a href=\"#如何用sql实现地理坐标之间的距离查询、周边查询及范围查询？\" class=\"headerlink\" title=\"如何用sql实现地理坐标之间的距离查询、周边查询及范围查询？\"></a>如何用sql实现地理坐标之间的距离查询、周边查询及范围查询？</h1><h2 id=\"进行空间查询的场景\"><a href=\"#进行空间查询的场景\" class=\"headerlink\" title=\"进行空间查询的场景\"></a>进行空间查询的场景</h2><p>在app上或数据分析时，有时会用到与经纬度等坐标位置相关的周边查询，常见的需求主要涉及三种空间查询：</p>\n<ul>\n<li>计算点之间的距离</li>\n<li>计算点与线之间的距离</li>\n<li>计算点与面之间的包含关系</li>\n</ul>\n<p>有很多种方式可以实现这些需求，从便捷性、可靠性、高效率的角度，可以考虑sql方式。</p>\n<h2 id=\"基于postgresql的几何空间计算\"><a href=\"#基于postgresql的几何空间计算\" class=\"headerlink\" title=\"基于postgresql的几何空间计算\"></a>基于postgresql的几何空间计算</h2><p>postgresql提供了便捷的空间关系语法，常用的包括：<br>A与B的距离用“A <-> B”，<br>判断A在B之内用“A &lt;@ B”<br>其他包括平移、缩放、相接、上下、左右、平行、中心点、最近点等各种你能想到的空间关系，感觉非常适合用来支撑图形计算。具体参见：<a href=\"https://www.postgresql.org/docs/9.6/functions-geometry.html\" target=\"_blank\" rel=\"noopener\">https://www.postgresql.org/docs/9.6/functions-geometry.html</a></-></p>\n<p>（1）计算两个点之间的距离：<br>点A：point(4, 3)<br>点B：point(10, 32)<br>sql如下：<br>select point(4, 3) <-> point(10, 32);</-></p>\n<p>（2）判断点A是否在面B之内：<br>点A：point ‘(1,1)’<br>面B：circle ‘((0,0),2)’<br>select point ‘(1,1)’ &lt;@ circle ‘((0,0),2)’ </p>\n<p>（3）查找距离线路3之内的所有点</p>\n<p>CREATE TABLE “test”.”bus_stop” (<br>  “id” int4 NOT NULL,<br>  “bus_stop” point,<br>  “stop_name” varchar(255) COLLATE “pg_catalog”.”default”<br>)<br>;</p>\n<p>CREATE TABLE “test”.”walk_line” (<br>  “id” int4 NOT NULL,<br>  “walk_line” path,<br>  “line_name” varchar(255) COLLATE “pg_catalog”.”default”<br>)<br>;</p>\n<p>SELECT<br>a.stop_name,<br>b.line_name,<br>a.bus_stop <-> b.walk_line as dist<br>from bus_stop as a,walk_line as b<br>where a.bus_stop <-> b.walk_line &lt; 3</-></-></p>\n<p>美中不足的是，postgresql只支持几何类型，不支持地理类型，也就是不支持经纬度。要支持经纬度，需要postgis插件的支持。</p>\n<h2 id=\"基于postgis的地理空间计算\"><a href=\"#基于postgis的地理空间计算\" class=\"headerlink\" title=\"基于postgis的地理空间计算\"></a>基于postgis的地理空间计算</h2><p>在postgis中有两种主要的数据类型，geometry和geography，常规功能优先使用geography类型。geometry是经典数据类型，功能非常强大，geography是postgis后来推出的数据类型，使用方便。两者之间的具体区别可见功能矩阵文档。</p>\n<p>建表：<br>CREATE TABLE ptgeogwgs(gid serial PRIMARY KEY, geog geography(POINT) );<br>INSERT INTO ptgeogwgs (gid, geog) VALUES (1,ST_GeogFromText(‘POINT(120.787 30.122)’));<br>INSERT INTO ptgeogwgs (gid, geog) VALUES (2,ST_GeogFromText(‘POINT(121.101 31.508)’));<br>SELECT gid,geog,st_astext(geog) from ptgeogwgs;</p>\n<p>点之间距离查询：<br>SELECT st_distance(p1.geog, p2.geog) from ptgeogwgs as p1,ptgeogwgs as p2 where p1.gid&gt;p2.gid ;</p>\n<p>周边查询：<br>SELECT p1.gid,p2.gid from ptgeogwgs as p1,ptgeogwgs as p2 where p1.gid&gt;p2.gid<br>and st_dwithin(p1.geog, p2.geog, 1000000)；</p>\n<p>点与线之间距离及周边查询：<br>create table linegeowgs (gid serial PRIMARY KEY, geog geography(LINESTRING));<br>INSERT INTO linegeowgs (gid, geog) VALUES (1,ST_GeogFromText(‘LINESTRING(121.11 31.22,121.22 31.13,121.33 31.433)’));<br>SELECT st_distance(p1.geog, p2.geog) from ptgeogwgs as p1,linegeowgs as p2<br>where st_dwithin(p1.geog,p2.geog,24000)</p>\n<p>相关概念的介绍：<br>点、线、面一般利用ST_GeogFromText从WKT(well known text)创建，常见的WKT有：</p>\n<ul>\n<li>POINT(0 0) ——点</li>\n<li>LINESTRING(0 0,1 1,1 2) ——线</li>\n<li>POLYGON((0 0,4 0,4 4,0 4,0 0),(1 1, 2 1, 2 2, 1 2,1 1)) ——面</li>\n</ul>\n<p>距离计算有多种方式，对geography来说直接使用st_distance可以满足需求，细节区别参见官方文档</p>\n<p>详细文档参见：<a href=\"https://postgis.net/docs/reference.html\" target=\"_blank\" rel=\"noopener\">https://postgis.net/docs/reference.html</a></p>\n<h2 id=\"postgis的安装\"><a href=\"#postgis的安装\" class=\"headerlink\" title=\"postgis的安装\"></a>postgis的安装</h2><p>最便捷的安装方法莫过于docker：<br>docker pull mdillon/postgis:9.6<br>docker run –name postgis -p 5432:5432 -e POSTGRES_PASSWORD=12345 -d mdillon/postgis:9.6</p>\n<p>安装好直接可用，不需要再create extension postgis</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"如何用sql实现地理坐标之间的距离查询、周边查询及范围查询？\"><a href=\"#如何用sql实现地理坐标之间的距离查询、周边查询及范围查询？\" class=\"headerlink\" title=\"如何用sql实现地理坐标之间的距离查询、周边查询及范围查询？\"></a>如何用sql实现地理坐标之间的距离查询、周边查询及范围查询？</h1><h2 id=\"进行空间查询的场景\"><a href=\"#进行空间查询的场景\" class=\"headerlink\" title=\"进行空间查询的场景\"></a>进行空间查询的场景</h2><p>在app上或数据分析时，有时会用到与经纬度等坐标位置相关的周边查询，常见的需求主要涉及三种空间查询：</p>\n<ul>\n<li>计算点之间的距离</li>\n<li>计算点与线之间的距离</li>\n<li>计算点与面之间的包含关系</li>\n</ul>\n<p>有很多种方式可以实现这些需求，从便捷性、可靠性、高效率的角度，可以考虑sql方式。</p>\n<h2 id=\"基于postgresql的几何空间计算\"><a href=\"#基于postgresql的几何空间计算\" class=\"headerlink\" title=\"基于postgresql的几何空间计算\"></a>基于postgresql的几何空间计算</h2><p>postgresql提供了便捷的空间关系语法，常用的包括：<br>A与B的距离用“A <-> B”，<br>判断A在B之内用“A &lt;@ B”<br>其他包括平移、缩放、相接、上下、左右、平行、中心点、最近点等各种你能想到的空间关系，感觉非常适合用来支撑图形计算。具体参见：<a href=\"https://www.postgresql.org/docs/9.6/functions-geometry.html\" target=\"_blank\" rel=\"noopener\">https://www.postgresql.org/docs/9.6/functions-geometry.html</a></-></p>\n<p>（1）计算两个点之间的距离：<br>点A：point(4, 3)<br>点B：point(10, 32)<br>sql如下：<br>select point(4, 3) <-> point(10, 32);</-></p>\n<p>（2）判断点A是否在面B之内：<br>点A：point ‘(1,1)’<br>面B：circle ‘((0,0),2)’<br>select point ‘(1,1)’ &lt;@ circle ‘((0,0),2)’ </p>\n<p>（3）查找距离线路3之内的所有点</p>\n<p>CREATE TABLE “test”.”bus_stop” (<br>  “id” int4 NOT NULL,<br>  “bus_stop” point,<br>  “stop_name” varchar(255) COLLATE “pg_catalog”.”default”<br>)<br>;</p>\n<p>CREATE TABLE “test”.”walk_line” (<br>  “id” int4 NOT NULL,<br>  “walk_line” path,<br>  “line_name” varchar(255) COLLATE “pg_catalog”.”default”<br>)<br>;</p>\n<p>SELECT<br>a.stop_name,<br>b.line_name,<br>a.bus_stop <-> b.walk_line as dist<br>from bus_stop as a,walk_line as b<br>where a.bus_stop <-> b.walk_line &lt; 3</-></-></p>\n<p>美中不足的是，postgresql只支持几何类型，不支持地理类型，也就是不支持经纬度。要支持经纬度，需要postgis插件的支持。</p>\n<h2 id=\"基于postgis的地理空间计算\"><a href=\"#基于postgis的地理空间计算\" class=\"headerlink\" title=\"基于postgis的地理空间计算\"></a>基于postgis的地理空间计算</h2><p>在postgis中有两种主要的数据类型，geometry和geography，常规功能优先使用geography类型。geometry是经典数据类型，功能非常强大，geography是postgis后来推出的数据类型，使用方便。两者之间的具体区别可见功能矩阵文档。</p>\n<p>建表：<br>CREATE TABLE ptgeogwgs(gid serial PRIMARY KEY, geog geography(POINT) );<br>INSERT INTO ptgeogwgs (gid, geog) VALUES (1,ST_GeogFromText(‘POINT(120.787 30.122)’));<br>INSERT INTO ptgeogwgs (gid, geog) VALUES (2,ST_GeogFromText(‘POINT(121.101 31.508)’));<br>SELECT gid,geog,st_astext(geog) from ptgeogwgs;</p>\n<p>点之间距离查询：<br>SELECT st_distance(p1.geog, p2.geog) from ptgeogwgs as p1,ptgeogwgs as p2 where p1.gid&gt;p2.gid ;</p>\n<p>周边查询：<br>SELECT p1.gid,p2.gid from ptgeogwgs as p1,ptgeogwgs as p2 where p1.gid&gt;p2.gid<br>and st_dwithin(p1.geog, p2.geog, 1000000)；</p>\n<p>点与线之间距离及周边查询：<br>create table linegeowgs (gid serial PRIMARY KEY, geog geography(LINESTRING));<br>INSERT INTO linegeowgs (gid, geog) VALUES (1,ST_GeogFromText(‘LINESTRING(121.11 31.22,121.22 31.13,121.33 31.433)’));<br>SELECT st_distance(p1.geog, p2.geog) from ptgeogwgs as p1,linegeowgs as p2<br>where st_dwithin(p1.geog,p2.geog,24000)</p>\n<p>相关概念的介绍：<br>点、线、面一般利用ST_GeogFromText从WKT(well known text)创建，常见的WKT有：</p>\n<ul>\n<li>POINT(0 0) ——点</li>\n<li>LINESTRING(0 0,1 1,1 2) ——线</li>\n<li>POLYGON((0 0,4 0,4 4,0 4,0 0),(1 1, 2 1, 2 2, 1 2,1 1)) ——面</li>\n</ul>\n<p>距离计算有多种方式，对geography来说直接使用st_distance可以满足需求，细节区别参见官方文档</p>\n<p>详细文档参见：<a href=\"https://postgis.net/docs/reference.html\" target=\"_blank\" rel=\"noopener\">https://postgis.net/docs/reference.html</a></p>\n<h2 id=\"postgis的安装\"><a href=\"#postgis的安装\" class=\"headerlink\" title=\"postgis的安装\"></a>postgis的安装</h2><p>最便捷的安装方法莫过于docker：<br>docker pull mdillon/postgis:9.6<br>docker run –name postgis -p 5432:5432 -e POSTGRES_PASSWORD=12345 -d mdillon/postgis:9.6</p>\n<p>安装好直接可用，不需要再create extension postgis</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}